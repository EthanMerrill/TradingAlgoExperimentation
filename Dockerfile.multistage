# Multi-stage Dockerfile for reliable TA-Lib installation
# Stage 1: Build TA-Lib from source
FROM python:3.11-slim as talib-builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    wget \
    make \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Download and compile TA-Lib
RUN cd /tmp && \
    wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz && \
    tar -xzf ta-lib-0.4.0-src.tar.gz && \
    cd ta-lib/ && \
    ./configure --prefix=/usr/local && \
    make && \
    make install && \
    ldconfig

# Stage 2: Build Python dependencies
FROM python:3.11-slim as python-builder

# Install minimal build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Copy TA-Lib from builder stage
COPY --from=talib-builder /usr/local/lib/libta_lib.* /usr/local/lib/
COPY --from=talib-builder /usr/local/include/ta-lib/ /usr/local/include/ta-lib/

# Set library path
ENV LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH

# Update ldconfig cache
RUN ldconfig

# Install Python dependencies
COPY requirements.txt /tmp/
RUN pip install --no-cache-dir --upgrade pip && \
    export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH && \
    export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH && \
    pip install --no-cache-dir TA-Lib>=0.4.25 && \
    pip install --no-cache-dir -r /tmp/requirements.txt

# Stage 3: Final runtime image
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV TZ=America/New_York
ENV LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH

# Install minimal runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy TA-Lib libraries from builder
COPY --from=talib-builder /usr/local/lib/libta_lib.* /usr/local/lib/
COPY --from=talib-builder /usr/local/include/ta-lib/ /usr/local/include/ta-lib/

# Copy Python packages from python-builder
COPY --from=python-builder /usr/local/lib/python3.11/site-packages/ /usr/local/lib/python3.11/site-packages/

# Update ldconfig cache
RUN ldconfig

# Set timezone to New York (same as US markets)
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Copy application code
COPY app/ ./app/
COPY config/ ./config/

# Copy credential files if they exist
COPY ALPACA_KEYS.json* ./
COPY POLYGON_API.json* ./
COPY GOOGLE_APPLICATION_CREDENTIALS.json* ./

# Create logs directory
RUN mkdir -p logs

# Test that TA-Lib works
RUN python -c "import talib; print('TA-Lib version:', talib.__version__)"

# Set the default command to run the new main application
CMD ["python", "app/main.py"]

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import sys; sys.exit(0)"
