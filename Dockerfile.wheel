# Use pre-compiled TA-Lib wheels for fastest build
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV TZ=America/New_York

# Install minimal system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Set timezone to New York (same as US markets)
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Copy requirements
COPY requirements.txt .

# Install TA-Lib from pre-built wheel (much faster than compiling)
RUN pip install --upgrade pip && \
    pip install --no-cache-dir --find-links https://github.com/cgohlke/talib-build/releases/latest/download/ TA-Lib || \
    pip install --no-cache-dir https://github.com/cgohlke/talib-build/releases/download/v0.4.29/TA_Lib-0.4.29-cp311-cp311-linux_x86_64.whl

# Install other dependencies (excluding TA-Lib since it's already installed)
RUN pip install --no-cache-dir -r requirements.txt || \
    (sed '/TA-Lib/d' requirements.txt > requirements_no_talib.txt && \
     pip install --no-cache-dir -r requirements_no_talib.txt)

# Copy application code
COPY app/ ./app/
COPY config/ ./config/

# Copy credential files if they exist
COPY ALPACA_KEYS.json* ./
COPY POLYGON_API.json* ./
COPY GOOGLE_APPLICATION_CREDENTIALS.json* ./

# Create logs directory
RUN mkdir -p logs

# Test that TA-Lib works
RUN python -c "import talib; print('TA-Lib version:', talib.__version__)"

# Set the default command to run the new main application
CMD ["python", "app/main.py"]

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import sys; sys.exit(0)"
